// <auto-generated />
using System;
using BoilerMonitoringAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoilerMonitoringAPI.Migrations
{
    [DbContext(typeof(BoilerMonitoringAPIContext))]
    partial class BoilerMonitoringAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoilerMonitoringAPI.Models.Boilers", b =>
                {
                    b.Property<Guid>("BoilerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BoilerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BoilerStatus")
                        .HasColumnType("int");

                    b.Property<int>("BoilerType")
                        .HasColumnType("int");

                    b.Property<int>("FillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("HomeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BoilerID");

                    b.HasIndex("HomeID");

                    b.ToTable("Boilers");
                });

            modelBuilder.Entity("BoilerMonitoringAPI.Models.Home", b =>
                {
                    b.Property<Guid>("HomeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HomeID");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("BoilerMonitoringAPI.Models.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserHomes", b =>
                {
                    b.Property<Guid>("HomeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HomeID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("UserHomes");
                });

            modelBuilder.Entity("BoilerMonitoringAPI.Models.Boilers", b =>
                {
                    b.HasOne("BoilerMonitoringAPI.Models.Home", "Home")
                        .WithMany("Boilers")
                        .HasForeignKey("HomeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");
                });

            modelBuilder.Entity("UserHomes", b =>
                {
                    b.HasOne("BoilerMonitoringAPI.Models.Home", null)
                        .WithMany()
                        .HasForeignKey("HomeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoilerMonitoringAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BoilerMonitoringAPI.Models.Home", b =>
                {
                    b.Navigation("Boilers");
                });
#pragma warning restore 612, 618
        }
    }
}
